{"version":3,"sources":["components/shared/Header.js","components/shared/Footer.js","components/layouts/BaseLayout.js","components/charts/LineChart/ResponsiveWrapper/ResponsiveWrapper.js","components/shared/RectangleChart.js","data/MonthlySales.csv","components/shared/LineChart.js","components/shared/Scatterplot.js","components/charts/LineChart/data.js","components/charts/LineChart/Axis/Axis.js","components/charts/LineChart/Axes/Axes.js","components/charts/LineChart/Bars/Bars.js","components/charts/LineChart/Chart/Chart.js","components/SynchronizedLineCharts/SynchronizedLineCharts.js","components/charts/GroupedBar/GroupedBar.js","components/charts/BrushZoom/BrushZoom.js","components/charts/Pies/Pies.tsx","pages/Home.js"],"names":["BsNavLink","props","route","title","className","to","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Footer","BaseLayout","children","ChartComponent","RectangleChart","svgLegendRef","useRef","useEffect","w","dataset","svg","d3","current","append","attr","selectAll","data","enter","d","i","length","v","text","ref","LineChart","monthlySales","h","salesTotal","salesAvg","metrics","dataJson","dataCsv","then","err","xScale","domain","month","range","padding","yScale","sales","xAxis","tickValues","yAxis","lineFun","x","y","curve","call","parseFloat","buildLine","push","toFixed","showTotals","catch","console","log","style","background","borderRadius","Scatterplot","Array","max","array","Math","apply","min","salesKPI","ds","col","val","type","showMinMax","value","year","Axis","this","renderAxis","axisType","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","d3Select","axisElement","el","transform","translate","Component","scales","margins","svgDimensions","height","width","xProps","bottom","top","yProps","left","right","Bars","colorScale","scaleLinear","maxValue","interpolate","interpolateLab","bars","map","datum","bandwidth","fill","Chart","scaleBand","parentWidth","Axes","ResponsiveWrapper","state","containerWidth","fitParentContainer","bind","window","addEventListener","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","setState","shouldRenderChart","renderChart","name","uv","pv","amt","SynchronizedLineCharts","syncId","margin","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","Brush","AreaChart","Area","labels","datasets","label","backgroundColor","options","yAxes","beginAtZero","GroupedBar","random","BrushZoom","getScatterData","size","keys","index","containerComponent","zoomDomain","opacity","React","orange","silver","letterFrequency","slice","frequency","defaultMargin","Example","levels","xMax","yMax","radius","radialScale","PI","webs","_","angle","points","step","sin","cos","genPoints","polygonPoints","dataArray","getValue","pointString","reduce","res","xVal","yVal","genPolygonPoints","zeroPoint","Point","rx","Group","LineRadial","strokeWidth","strokeOpacity","strokeLinecap","from","fillOpacity","point","cx","cy","r","Home","Container","Row","Col","md","xs","lg"],"mappings":"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","file":"static/js/6.32c45498.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n\nconst BsNavLink = (props) => {\n    const {route, title } = props;\n    return (\n        <Link\n            className='navbar__item'\n            to={route}>\n    {title}\n        </Link>\n\n);\n}\n\nconst Header = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <div>\n            <Navbar\n                className={`port-navbar port-default absolute`}\n                color=\"transparent\" dark expand=\"md\">\n                <NavbarBrand className={\"port-navbar-brand\"} href=\"/\">Nawaf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"navbar mr-auto\" navbar>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <BsNavLink route={\"/\"} title={\"Home\"}/>\n                        </NavItem>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <BsNavLink route={\"/about\"} title={\"About\"}/>\n                        </NavItem>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <NavLink href=\"https://github.com/Nawaf-Almansour/Dashboard-D3js-React\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Header;","import { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n\n\nconst BsNavLink = (props) => {\n    const {route, title } = props;\n    return (\n        <Link to={route}>\n            {title}\n        </Link>\n    )\n}\n\nconst Footer = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <div>\n            <Navbar\n                className={`port-navbar port-default absolute`}\n                color=\"transparent\" dark expand=\"md\">\n                <NavbarBrand className={\"port-navbar-brand\"} href=\"/\">Nawaf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem className={\"port-navbar-item\"}>\n                            <BsNavLink route={\"/\"} title={\"Home\"}/>\n                        </NavItem>\n                        <NavItem>\n                            <BsNavLink route={\"/about\"} title={\"About\"}/>\n                        </NavItem>\n                        <NavItem className=\"port-navbar-item\">\n                            <NavLink href=\"https://github.com/\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Footer;","import Header from \"../shared/Header\";\nimport Footer from \"../shared/Footer\";\n\nconst BaseLayout = (props) => {\n    const { children, className } = props\n    return (\n        <div className=\"layout-container\">\n            <Header/>\n            <main className={`cover ${className}`}>\n                <div className=\"wrapper\">\n                    {children}\n                </div>\n            </main>\n            <Footer/>\n        </div>\n\n    )\n\n}\nexport default BaseLayout;","import React, { Component } from 'react'\n\nexport default ChartComponent => (\n    class ResponsiveChart extends Component {\n        constructor(props) {\n            super(props)\n\n            this.state = {\n                containerWidth: null,\n            }\n\n            this.fitParentContainer = this.fitParentContainer.bind(this)\n        }\n\n        componentDidMount() {\n            this.fitParentContainer()\n            window.addEventListener('resize', this.fitParentContainer)\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener('resize', this.fitParentContainer)\n        }\n\n        fitParentContainer() {\n            const { containerWidth } = this.state\n            const currentContainerWidth = this.chartContainer\n                .getBoundingClientRect().width\n\n            const shouldResize = containerWidth !== currentContainerWidth\n\n            if (shouldResize) {\n                this.setState({\n                    containerWidth: currentContainerWidth,\n                })\n            }\n        }\n\n        renderChart() {\n            const parentWidth = this.state.containerWidth\n\n            return (\n                <ChartComponent {...this.props} parentWidth={parentWidth} />\n            )\n        }\n\n        render() {\n            const { containerWidth } = this.state\n            const shouldRenderChart = containerWidth !== null\n\n            return (\n                <div\n                    ref={(el) => { this.chartContainer = el }}\n                    className=\"Responsive-wrapper\"\n                >\n                    {shouldRenderChart && this.renderChart()}\n                </div>\n            )\n        }\n    }\n)\n","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\n// import dataJson from \"../../data/MonthlySalesbyCategory.json\"\n\nconst RectangleChart = () => {\n    const svgLegendRef = useRef(null);\n\n    useEffect(() => {\n        const w = 300;\n        const h = 100;\n        const padding = 2;\n        let dataset = [ 5, 10, 13, 19, 21, 25,\n            11, 25, 22, 18, 7];\n\n            const svg = d3.select(svgLegendRef.current).append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n            function colorPicker(v) {\n                if (v <= 20) {\n                    return \"#666666\";\n                } else if (v > 20) {\n                    return \"#FF0033\";\n                }\n            }\n\n            svg.selectAll(\"rect\")\n                .data(dataset)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", function (d, i) {\n                    return i * (w / dataset.length);\n                })\n                .attr(\"y\", function (d) {\n                    return h - (d * 4);\n                })\n                .attr(\"width\", w / dataset.length - padding)\n                .attr(\"height\", function (d) {\n                    return d * 4;\n                })\n                .attr(\"fill\", function (d) {\n                    return colorPicker(d);\n                });\n\n            svg.selectAll(\"text\")\n                .data(dataset)\n                .enter()\n                .append(\"text\")\n                .text(function (d) {\n                    return d;\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", function (d, i) {\n                    return i * (w / dataset.length) + (w / dataset.length - padding) / 2;\n                })\n                .attr(\"y\", function (d) {\n                    return h - (d * 4) + 14;\n                })\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", 12)\n                .attr(\"fill\", \"#ffffff\")\n    });\n\n    return(<div ref={svgLegendRef}/>)\n\n}\n\n\nexport default RectangleChart;","export default __webpack_public_path__ + \"static/media/MonthlySales.e4907134.csv\";","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\nimport dataCsv from '../../data/MonthlySales.csv';\nimport dataJson from \"../../data/MonthlySalesbyCategory.json\";\n\nconst LineChart = () => {\n    const svgLegendRef = useRef(null);\n\n    useEffect(() => {\n        const h = 200;\n        const w = 400;\n        const padding = 25;\n        let monthlySales = []\n        let salesTotal = 0.0;\n        let salesAvg = 0.0;\n        let metrics = [];\n\n        monthlySales = dataJson.monthlySales\n\n        d3.csv(dataCsv).then(function (data, err) {\n            // monthlySales = data\n        }).then(() => {\n            buildLine();\n            showTotals();\n        }).catch(function (err) {\n            console.log(err);  //if so, log it to the console\n            throw err;\n        })\n\n\n\n        function buildLine() {\n\n            let xScale = d3.scaleLinear()\n                .domain([\n                    d3.min(monthlySales, function(d){ return d.month;}) ,\n                    d3.max(monthlySales, function(d){ return d.month;})\n                ])\n                .range([padding+5, w-padding]);\n\n\n\n            let yScale = d3.scaleLinear()\n                .domain([\n                        d3.min(monthlySales, function(d){ return d.sales;}) ,\n\n                    ])\n                .range([h-padding,10]);\n\n\n            // let xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n            // let yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n            let xAxis = d3.axisBottom(xScale)\n                .tickValues([1, 2, 3, 5, 8, 13, 21])\n\n            let yAxis = d3.axisLeft(yScale)\n                .tickValues([1, 2, 3, 5, 8, 13, 21])\n\n\n            let lineFun = d3\n                .line()\n                .x(function (d) { return ((d.month-20130001)/3.25); })\n                .y(function (d) { return h-d.sales; })\n                .curve(d3.curveLinear);\n\n            const svg = d3.select(svgLegendRef.current)\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .call(xAxis)\n                .call(yAxis)\n                .attr(\"fill\", \"rgb(255,172,213)\")\n                .attr(\"rx\", 14);\n\n            svg.append(\"path\")\n                .attr(\"d\", lineFun(monthlySales))\n                .attr(\"stroke\", \"rgb(0,169,208)\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"fill\", \"none\")\n\n\n            svg.selectAll(\"text\")\n                .data(monthlySales)\n                .enter()\n                .append(\"text\")\n                //.text(function(d){ return d.sales; } )\n                .text(function (d) {\n                    return parseFloat(d.sales);\n                })\n                .attr('x', function (d) {\n                    return (d.month-20130001)/3.25 - 25;\n                })\n                .attr('y', function (d) {\n                    return h-d.sales;\n                })\n                .attr(\"font-size\", \"13px\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"#ffffff\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dy\", \".35em\")\n                .attr(\"font-weight\", function (d, i) {\n                    if (i === 0 || i === (monthlySales.length - 1)) {\n                        return \"bold\";\n                    } else {\n                        return \"normal\";\n                    }\n                })\n        }\n        function showTotals(){\n\n            //sales total\n            for (let i = 0; i < monthlySales.length; i++) {\n                salesTotal += monthlySales[i]['sales']*1; //*1 to make it a number\n            };\n\n            //sales average\n            salesAvg = salesTotal / monthlySales.length;\n\n            //add metrics to array\n            metrics.push(\"Sales Total: \" + salesTotal);\n            metrics.push(\"Sales Avg: \"+salesAvg.toFixed(2));\n\n            const t = d3.select(svgLegendRef.current).append(\"table\");\n\n            //now add total\n            t.selectAll(\"tr\")\n                .data(metrics)\n                .enter()\n                .append(\"tr\")\n                .append(\"td\")\n                .text(function(d){ return d; })\n                .attr(\"font-size\", \"13px\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"style\" , \"background-color: #00000029; color:white\");\n\n        };\n\n\n\n    });\n    return(<div style={{background: \"rgb(93,38,53)\", borderRadius: \"8px\"} } ref={svgLegendRef}/>)\n\n}\n\n\nexport default LineChart;","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\n\nconst Scatterplot = () => {\n    const svgLegendRef = useRef(null);\n\n    useEffect(() => {\n        const h = 350;\n        const w = 400;\n\n        const monthlySales = [\n            {\"month\":10, \"sales\":100},\n            {\"month\":20, \"sales\":130},\n            {\"month\":30, \"sales\":250},\n            {\"month\":40, \"sales\":300},\n            {\"month\":50, \"sales\":265},\n            {\"month\":60, \"sales\":225},\n            {\"month\":70, \"sales\":180},\n            {\"month\":80, \"sales\":120},\n            {\"month\":90, \"sales\":145},\n            {\"month\":100, \"sales\":130}\n        ];\n\n        function salesKPI (d) {\n            if (d>=250) { return \"#33CC66\"; } else\n            if (d<250) { return \"#666666\"; }\n        }\n        //add min/max to array\n        Array.max = function( array ){\n            return Math.max.apply( Math, array );\n        };\n\n        Array.min = function( array ){\n            return Math.min.apply( Math, array );\n        };\n\n        function showMinMax(ds, col, val, type){\n            const max = d3.max(ds, function(d) { return d[col]; } );\n            const min = d3.min(ds, function (d) {\n                return d[col];\n            });\n\n            if (type==='minmax' && (val === max || val === min)) {\n                return val;\n            } else\n\n            if (type==='all') {\n                return val;\n            }\n\n        }\n\n        const svg = d3.select(svgLegendRef.current)\n            .append(\"svg\")\n            .attr( \"width\",w)\n            .attr(\"height\", h);\n\n        svg.selectAll(\"circle\")\n            .data(monthlySales)\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", function(d){ return d.month*3; })\n            .attr(   \"cy\", function(d){ return h-d.sales; })\n            .attr(\"r\",  5)\n            .attr(\"fill\", function(d){ return salesKPI(d.sales)})\n\n        svg.selectAll(\"text\")\n            .data(monthlySales)\n            .enter()\n            .append(\"text\")\n            .text(function(d){ return showMinMax(monthlySales, 'sales', d.sales, 'minmax'); })\n                .attr(\"x\", function(d){ return (d.month*3)-25; })\n    .attr( \"y\", function(d){ return h-d.sales; })\n    .attr( \"font-size\", \"12px\")\n    .attr( \"font-family\", \"sans-serif\")\n    .attr(  \"fill\", \"#666666\")\n    .attr(    \"text-anchor\", \"start\")\n    });\n    return(<div ref={svgLegendRef}/>)\n\n}\n\n\nexport default Scatterplot;","export default [\n    { title: 'Terminator', value: 21, year: 1984 },\n    { title: 'Commando', value: 81, year: 1985 },\n    { title: 'Predator', value: 25, year: 1987 },\n    { title: 'Raw Deal', value: 26, year: 1986 },\n    { title: 'The Running Man', value: 11, year: 1987 },\n    { title: 'Total Recall', value: 44, year: 1990 },\n    { title: 'Terminator 2', value: 0, year: 1991 },\n    { title: 'Last Action Hero', value: 22, year: 1993 },\n    { title: 'True Lies', value: 51, year: 1994 },\n    { title: 'Eraser', value: 29, year: 1996 },\n    { title: 'Terminator 3', value: 2, year: 2003 },\n]\n","import React, { Component } from 'react'\nimport * as d3Axis from 'd3-axis'\nimport { select as d3Select } from 'd3-selection'\n\nimport './Axis.css'\n\nexport default class Axis extends Component {\n    componentDidMount() {\n        this.renderAxis()\n    }\n\n    componentDidUpdate() {\n        this.renderAxis()\n    }\n\n    renderAxis() {\n        const axisType = `axis${this.props.orient}`\n        const axis = d3Axis[axisType]()\n            .scale(this.props.scale)\n            .tickSize(-this.props.tickSize)\n            .tickPadding([12])\n            .ticks([4])\n\n        d3Select(this.axisElement).call(axis)\n    }\n\n    render() {\n        return (\n            <g\n                className={`Axis Axis-${this.props.orient}`}\n                ref={(el) => { this.axisElement = el; }}\n                transform={this.props.translate}\n            />\n        )\n    }\n}\n","import React from 'react'\nimport Axis from '../Axis/Axis'\n\nexport default ({ scales, margins, svgDimensions }) => {\n    const { height, width } = svgDimensions\n\n    const xProps = {\n        orient: 'Bottom',\n        scale: scales.xScale,\n        translate: `translate(0, ${height - margins.bottom})`,\n        tickSize: height - margins.top - margins.bottom,\n    }\n\n    const yProps = {\n        orient: 'Left',\n        scale: scales.yScale,\n        translate: `translate(${margins.left}, 0)`,\n        tickSize: width - margins.left - margins.right,\n    }\n\n    return (\n        <g>\n            <Axis {...xProps} />\n            <Axis {...yProps} />\n        </g>\n    )\n}\n","import React, { Component } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { interpolateLab } from 'd3-interpolate'\n\nexport default class Bars extends Component {\n    constructor(props) {\n        super(props)\n\n        this.colorScale = scaleLinear()\n            .domain([0, this.props.maxValue])\n            .range(['#F3E5F5', '#7B1FA2'])\n            .interpolate(interpolateLab)\n    }\n\n    render() {\n        const { scales, margins, data, svgDimensions } = this.props\n        const { xScale, yScale } = scales\n        const { height } = svgDimensions\n\n        const bars = (\n            data.map(datum =>\n                <rect\n                    key={datum.title}\n                    x={xScale(datum.title)}\n                    y={yScale(datum.value)}\n                    height={height - margins.bottom - scales.yScale(datum.value)}\n                    width={xScale.bandwidth()}\n                    fill={this.colorScale(datum.value)}\n                />,\n            )\n        )\n\n        return (\n            <g>{bars}</g>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { scaleBand, scaleLinear } from 'd3-scale'\n\nimport data from '../data'\nimport Axes from '../Axes/Axes'\nimport Bars from '../Bars/Bars'\nimport ResponsiveWrapper from '../ResponsiveWrapper/ResponsiveWrapper'\n\nclass Chart extends Component {\n    constructor() {\n        super()\n        this.xScale = scaleBand()\n        this.yScale = scaleLinear()\n    }\n\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 }\n        const svgDimensions = {\n            width: Math.max(this.props.parentWidth, 300),\n            height: 500\n        }\n\n        const maxValue = Math.max(...data.map(d => d.value))\n\n        const xScale = this.xScale\n            .padding(0.5)\n            .domain(data.map(d => d.title))\n            .range([margins.left, svgDimensions.width - margins.right])\n\n        const yScale = this.yScale\n            .domain([0, maxValue])\n            .range([svgDimensions.height - margins.bottom, margins.top])\n\n        return (\n            <svg width={svgDimensions.width} height={svgDimensions.height}>\n                <Axes\n                    scales={{ xScale, yScale }}\n                    margins={margins}\n                    svgDimensions={svgDimensions}\n                />\n                <Bars\n                    scales={{ xScale, yScale }}\n                    margins={margins}\n                    data={data}\n                    maxValue={maxValue}\n                    svgDimensions={svgDimensions}\n                />\n            </svg>\n        )\n    }\n}\n\nexport default ResponsiveWrapper(Chart)\n","import React from \"react\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Brush,\n    AreaChart,\n    Area\n} from \"recharts\";\n\nconst data = [\n    {\n        name: \"Page A\",\n        uv: 4000,\n        pv: 2400,\n        amt: 2400\n    },\n    {\n        name: \"Page B\",\n        uv: 3000,\n        pv: 1398,\n        amt: 2210\n    },\n    {\n        name: \"Page C\",\n        uv: 2000,\n        pv: 9800,\n        amt: 2290\n    },\n    {\n        name: \"Page D\",\n        uv: 2780,\n        pv: 3908,\n        amt: 2000\n    },\n    {\n        name: \"Page E\",\n        uv: 1890,\n        pv: 4800,\n        amt: 2181\n    },\n    {\n        name: \"Page F\",\n        uv: 2390,\n        pv: 3800,\n        amt: 2500\n    },\n    {\n        name: \"Page G\",\n        uv: 3490,\n        pv: 4300,\n        amt: 2100\n    }\n];\n\nconst SynchronizedLineCharts = (props) => {\n        return (\n        <div>\n            <h4>A demo of synchronized AreaCharts</h4>\n            <LineChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            </LineChart>\n            <p>Maybe some other content</p>\n            <LineChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                <Brush />\n            </LineChart>\n            <AreaChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n        </div>\n    );\n}\n\nexport default SynchronizedLineCharts;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Red Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: 'rgb(255, 99, 132)',\n        },\n        {\n            label: '# of Blue Votes',\n            data: [2, 3, 20, 5, 1, 4],\n            backgroundColor: 'rgb(54, 162, 235)',\n        },\n        {\n            label: '# of Green Votes',\n            data: [3, 10, 13, 15, 22, 30],\n            backgroundColor: 'rgb(75, 192, 192)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst GroupedBar = () => (\n    <>\n        <div className='header'>\n            <h1 className='title'>Grouped Bar Chart</h1>\n            <div className='links'>\n                <a\n                    className='btn btn-gh'\n                    href='https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/GroupedBar.js'\n                >\n                    Github Source\n                </a>\n            </div>\n        </div>\n        <Bar data={data} options={options} />\n    </>\n);\n\nexport default GroupedBar;\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryZoomContainer,\n    VictoryScatter,\n} from \"victory\";\n\n\nfunction random(max, min) {\n    return Math.random() * (max - min) + min;\n\n}\n\nfunction range(size) {\n    return [...Array(size).keys()].map(i => i );\n\n}\n\nclass BrushZoom extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        data: this.getScatterData()\n    }\n\n    getScatterData() {\n        return range(50).map((index) => {\n            return {\n                x: random(1, 50),\n                y: random(10, 90),\n                size: random(8) + 3\n            };\n        });\n    }\n\n    render() {\n        return (\n            <VictoryChart\n                domain={{y: [0, 100]}}\n                containerComponent={<VictoryZoomContainer zoomDomain={{x: [5, 35], y: [0, 100]}}/>}\n            >\n                <VictoryScatter\n                    data={this.state.data}\n                    style={{\n                        data: {\n                            opacity: ({ datum }) =>  datum.y % 5 === 0 ? 1 : 0.7,\n                            fill: ({ datum }) => datum.y % 5 === 0 ? \"tomato\" : \"black\"\n                        }\n                    }}\n                />\n            </VictoryChart>\n        );\n    }\n}\n\nexport  default BrushZoom;","import React from 'react';\nimport { Group } from '@visx/group';\nimport letterFrequency, { LetterFrequency } from '@visx/mock-data/lib/mocks/letterFrequency';\nimport { scaleLinear } from '@visx/scale';\nimport { Point } from '@visx/point';\nimport { Line, LineRadial } from '@visx/shape';\n\nconst orange = '#ff9933';\nexport const pumpkin = '#f5810c';\nconst silver = '#d9d9d9';\nexport const background = '#FAF7E9';\n\nconst degrees = 360;\nconst data = letterFrequency.slice(2, 12);\n\nconst y = (d: LetterFrequency) => d.frequency;\n\nconst genAngles = (length: number) =>\n    [...new Array(length + 1)].map((_, i) => ({\n        angle: i * (degrees / length),\n    }));\n\nconst genPoints = (length: number, radius: number) => {\n    const step = (Math.PI * 2) / length;\n    return [...new Array(length)].map((_, i) => ({\n        x: radius * Math.sin(i * step),\n        y: radius * Math.cos(i * step),\n    }));\n};\n\nfunction genPolygonPoints<Datum>(\n    dataArray: Datum[],\n    scale: (n: number) => number,\n    getValue: (d: Datum) => number,\n) {\n    const step = (Math.PI * 2) / dataArray.length;\n    const points: { x: number; y: number }[] = new Array(dataArray.length).fill({ x: 0, y: 0 });\n    const pointString: string = new Array(dataArray.length + 1).fill('').reduce((res, _, i) => {\n        if (i > dataArray.length) return res;\n        const xVal = scale(getValue(dataArray[i - 1])) * Math.sin(i * step);\n        const yVal = scale(getValue(dataArray[i - 1])) * Math.cos(i * step);\n        points[i - 1] = { x: xVal, y: yVal };\n        res += `${xVal},${yVal} `;\n        return res;\n    });\n\n    return { points, pointString };\n}\n\nconst defaultMargin = { top: 40, left: 80, right: 80, bottom: 80 };\n\nexport type RadarProps = {\n    width: number;\n    height: number;\n    margin?: { top: number; right: number; bottom: number; left: number };\n    levels?: number;\n};\n\nexport default function Example({ width, height, levels = 5, margin = defaultMargin }: RadarProps) {\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    const radius = Math.min(xMax, yMax) / 2;\n\n    const radialScale = scaleLinear<number>({\n        range: [0, Math.PI * 2],\n        domain: [degrees, 0],\n    });\n\n    const yScale = scaleLinear<number>({\n        range: [0, radius],\n        domain: [0, Math.max(...data.map(y))],\n    });\n\n    const webs = genAngles(data.length);\n    const points = genPoints(data.length, radius);\n    const polygonPoints = genPolygonPoints(data, d => yScale(d) ?? 0, y);\n    const zeroPoint = new Point({ x: 0, y: 0 });\n\n    return width < 10 ? null : (\n        <svg width={width} height={height}>\n            <rect fill={background} width={width} height={height} rx={14} />\n            <Group top={height / 2 - margin.top} left={width / 2}>\n                {[...new Array(levels)].map((_, i) => (\n                    <LineRadial\n                        key={`web-${i}`}\n                        data={webs}\n                        angle={d => radialScale(d.angle) ?? 0}\n                        radius={((i + 1) * radius) / levels}\n                        fill=\"none\"\n                        stroke={silver}\n                        strokeWidth={2}\n                        strokeOpacity={0.8}\n                        strokeLinecap=\"round\"\n                    />\n                ))}\n                {[...new Array(data.length)].map((_, i) => (\n                    <Line key={`radar-line-${i}`} from={zeroPoint} to={points[i]} stroke={silver} />\n                ))}\n                <polygon\n                    points={polygonPoints.pointString}\n                    fill={orange}\n                    fillOpacity={0.3}\n                    stroke={orange}\n                    strokeWidth={1}\n                />\n                {polygonPoints.points.map((point, i) => (\n                    <circle key={`radar-point-${i}`} cx={point.x} cy={point.y} r={4} fill={pumpkin} />\n                ))}\n            </Group>\n        </svg>\n    );\n}\n","import React from \"react\";\nimport BaseLayout from \"../components/layouts/BaseLayout\";\nimport RectangleChart from \"../components/shared/RectangleChart\";\nimport LineChart from \"../components/shared/LineChart\";\nimport Scatterplot from \"../components/shared/Scatterplot\";\nimport Chart from \"../components/charts/LineChart/Chart/Chart\";\nimport SynchronizedLineCharts from \"../components/SynchronizedLineCharts/SynchronizedLineCharts\";\nimport GroupedBar from \"../components/charts/GroupedBar/GroupedBar\";\nimport BrushZoom from \"../components/charts/BrushZoom/BrushZoom\";\nimport ParentSize from '@visx/responsive/lib/components/ParentSize';\nimport Typed from 'react-typed';\n\nimport Example from '../components/charts/Pies/Pies';\nimport {Col, Container, Row} from \"reactstrap\";\n\nclass Home extends React.Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <BaseLayout className=\"cover\">\n                <div className=\"main-section\">\n                    <div className=\"background-image\">\n                        {/*<img src=\"/images/background-index.png\"/>*/}\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"hero-section\">\n                                    <div className={`flipper`}>\n                                        <div className=\"back\">\n                                            <div className=\"hero-section-content\">\n                                                <h2> Full Stack Web Developer </h2>\n                                                <div className=\"hero-section-content-intro\">\n                                                    Have a look at my portfolio and job history.\n                                                </div>\n                                            </div>\n                                            {/*<img className=\"image\" src=\"/images/section-1.png\"/>*/}\n                                            <div className=\"shadow-custom\">\n                                                {/*<div className=\"shadow-inner\"></div>*/}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md=\"6\" className=\"hero-welcome-wrapper\">\n                                <div className=\"hero-welcome-text\">\n                                    <h1>\n                                        Welcome to the portfolio website of Filip Jerga. collaborate and discover\n                                        projects I was working o…\n                                    </h1>\n                                </div>\n                                {/*<Typed*/}\n                                {/*    loop*/}\n                                {/*    typeSpeed={70}*/}\n                                {/*    backSpeed={70}*/}\n                                {/*    strings={this.roles}*/}\n                                {/*    fadeOutDelay={1000}*/}\n                                {/*    loopCount={0}*/}\n                                {/*    showCursor*/}\n                                {/*    className=\"self-typed\"*/}\n                                {/*    cursorChar=\"|\"*/}\n                                {/*/>*/}\n                                <div className=\"hero-welcome-bio\">\n                                    <h1>\n                                        Let's take a look on my work.\n                                    </h1>\n                                </div>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <RectangleChart/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <LineChart/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <Scatterplot/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <Chart/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\" className=\"hero-welcome-wrapper\">\n\n                                <SynchronizedLineCharts/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <GroupedBar/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                            <BrushZoom/>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper\">\n\n                                <div style={{height: \"400px\"}}>\n                                    <ParentSize>{({width, height}) => <Example width={width}\n                                                                               height={height}/>}</ParentSize>,\n\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </div>\n            </BaseLayout>\n\n        )\n    }\n\n\n}\n\nexport default Home;"],"sourceRoot":""}