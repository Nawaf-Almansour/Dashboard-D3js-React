{"version":3,"sources":["components/shared/Header.js","components/shared/Footer.js","components/layouts/BaseLayout.js","components/charts/LineChart/ResponsiveWrapper/ResponsiveWrapper.js","components/shared/RectangleChart.js","data/MonthlySales.csv","components/shared/LineChart.js","components/shared/Scatterplot.js","components/charts/LineChart/data.js","components/charts/LineChart/Axis/Axis.js","components/charts/LineChart/Axes/Axes.js","components/charts/LineChart/Bars/Bars.js","components/charts/LineChart/Chart/Chart.js","components/SynchronizedLineCharts/SynchronizedLineCharts.js","components/charts/GroupedBar/GroupedBar.js","components/charts/BrushZoom/BrushZoom.js","components/charts/Pies/Pies.tsx","pages/Home.js"],"names":["BsNavLink","props","route","title","className","to","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Footer","BaseLayout","children","ChartComponent","RectangleChart","svg","svgLegendRef","useRef","useEffect","w","dataset","d3","current","append","attr","selectAll","data","enter","d","i","length","v","text","style","background","borderRadius","padding","ref","LineChart","monthlySales","h","salesTotal","salesAvg","metrics","dataJson","dataCsv","then","err","xScale","domain","month","range","yScale","sales","xAxis","tickValues","yAxis","lineFun","x","y","curve","call","parseFloat","buildLine","push","toFixed","showTotals","catch","console","log","Scatterplot","Array","max","array","Math","apply","min","salesKPI","ds","col","val","type","showMinMax","value","year","Axis","this","renderAxis","axisType","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","d3Select","axisElement","el","transform","translate","Component","scales","margins","svgDimensions","height","width","xProps","bottom","top","yProps","left","right","Bars","colorScale","scaleLinear","maxValue","interpolate","interpolateLab","bars","map","datum","bandwidth","fill","Chart","scaleBand","parentWidth","Axes","ResponsiveWrapper","state","containerWidth","fitParentContainer","bind","window","addEventListener","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","setState","shouldRenderChart","renderChart","name","uv","pv","amt","SynchronizedLineCharts","syncId","margin","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","Brush","AreaChart","Area","labels","datasets","label","backgroundColor","options","yAxes","beginAtZero","GroupedBar","random","BrushZoom","getScatterData","size","keys","index","containerComponent","zoomDomain","opacity","React","orange","silver","letterFrequency","slice","frequency","defaultMargin","Example","levels","xMax","yMax","radius","radialScale","PI","webs","_","angle","points","step","sin","cos","genPoints","polygonPoints","dataArray","getValue","pointString","reduce","res","xVal","yVal","genPolygonPoints","zeroPoint","Point","rx","Group","LineRadial","strokeWidth","strokeOpacity","strokeLinecap","from","fillOpacity","point","cx","cy","r","Home","roles","Container","Row","Col","md","loop","typeSpeed","backSpeed","strings","fadeOutDelay","loopCount","showCursor","cursorChar","xs","lg"],"mappings":"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","file":"static/js/6.8868ba01.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n\nconst BsNavLink = (props) => {\n    const {route, title } = props;\n    return (\n        <Link\n            className='navbar__item'\n            to={route}>\n    {title}\n        </Link>\n\n);\n}\n\nconst Header = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <div>\n            <Navbar\n                className={`port-navbar port-default absolute`}\n                color=\"transparent\" dark expand=\"md\">\n                <NavbarBrand className={\"port-navbar-brand\"} href=\"/\">Nawaf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"navbar mr-auto\" navbar>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <BsNavLink route={\"/\"} title={\"Home\"}/>\n                        </NavItem>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <BsNavLink route={\"/about\"} title={\"About\"}/>\n                        </NavItem>\n                        <NavItem  className='port-navbar-item navbar__title navbar__item'>\n                            <NavLink href=\"https://github.com/Nawaf-Almansour/Dashboard-D3js-React\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Header;","import { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n\n\nconst BsNavLink = (props) => {\n    const {route, title } = props;\n    return (\n        <Link to={route}>\n            {title}\n        </Link>\n    )\n}\n\nconst Footer = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        <div>\n            <Navbar\n                className={`port-navbar port-default absolute`}\n                color=\"transparent\" dark expand=\"md\">\n                <NavbarBrand className={\"port-navbar-brand\"} href=\"/\">Nawaf</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem className={\"port-navbar-item\"}>\n                            <BsNavLink route={\"/\"} title={\"Home\"}/>\n                        </NavItem>\n                        <NavItem>\n                            <BsNavLink route={\"/about\"} title={\"About\"}/>\n                        </NavItem>\n                        <NavItem className=\"port-navbar-item\">\n                            <NavLink href=\"https://github.com/\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default Footer;","import Header from \"../shared/Header\";\nimport Footer from \"../shared/Footer\";\n\nconst BaseLayout = (props) => {\n    const { children, className } = props\n    return (\n        <div className=\"layout-container\">\n            <Header/>\n            <main className={`cover ${className}`}>\n                <div className=\"wrapper\">\n                    {children}\n                </div>\n            </main>\n            <Footer/>\n        </div>\n\n    )\n\n}\nexport default BaseLayout;","import React, { Component } from 'react'\n\nexport default ChartComponent => (\n    class ResponsiveChart extends Component {\n        constructor(props) {\n            super(props)\n\n            this.state = {\n                containerWidth: null,\n            }\n\n            this.fitParentContainer = this.fitParentContainer.bind(this)\n        }\n\n        componentDidMount() {\n            this.fitParentContainer()\n            window.addEventListener('resize', this.fitParentContainer)\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener('resize', this.fitParentContainer)\n        }\n\n        fitParentContainer() {\n            const { containerWidth } = this.state\n            const currentContainerWidth = this.chartContainer\n                .getBoundingClientRect().width\n\n            const shouldResize = containerWidth !== currentContainerWidth\n\n            if (shouldResize) {\n                this.setState({\n                    containerWidth: currentContainerWidth,\n                })\n            }\n        }\n\n        renderChart() {\n            const parentWidth = this.state.containerWidth\n\n            return (\n                <ChartComponent {...this.props} parentWidth={parentWidth} />\n            )\n        }\n\n        render() {\n            const { containerWidth } = this.state\n            const shouldRenderChart = containerWidth !== null\n\n            return (\n                <div style={{background: \"rgba(194,183,61,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"}}\n                    ref={(el) => { this.chartContainer = el }}\n                    className=\"Responsive-wrapper\"\n                >\n                    {shouldRenderChart && this.renderChart()}\n                </div>\n            )\n        }\n    }\n)\n","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\n// import dataJson from \"../../data/MonthlySalesbyCategory.json\"\n\nconst RectangleChart = () => {\n    const svgLegendRef = useRef(null);\n    let svg;\n\n    useEffect(() => {\n        const w = 300;\n        const h = 100;\n        const padding = 2;\n        let dataset = [ 5, 10, 13, 19, 21, 25,\n            11, 25, 22, 18, 7];\n\n             svg = d3.select(svgLegendRef.current).append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n\n        function colorPicker(v) {\n                if (v <= 20) {\n                    return \"#666666\";\n                } else if (v > 20) {\n                    return \"#FF0033\";\n                }\n            }\n\n            svg.selectAll(\"rect\")\n                .data(dataset)\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", function (d, i) {\n                    return i * (w / dataset.length);\n                })\n                .attr(\"y\", function (d) {\n                    return h - (d * 4);\n                })\n                .attr(\"width\", w / dataset.length - padding)\n                .attr(\"height\", function (d) {\n                    return d * 4;\n                })\n                .attr(\"fill\", function (d) {\n                    return colorPicker(d);\n                });\n\n            svg.selectAll(\"text\")\n                .data(dataset)\n                .enter()\n                .append(\"text\")\n                .text(function (d) {\n                    return d;\n                })\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", function (d, i) {\n                    return i * (w / dataset.length) + (w / dataset.length - padding) / 2;\n                })\n                .attr(\"y\", function (d) {\n                    return h - (d * 4) + 14;\n                })\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", 13)\n                .attr(\"fill\", \"#ffffff\")\n                .attr(\"font-weight\",\"700\")\n                .attr(\"style\" , \" color:white\");\n    },[svg]);\n\n    return(<div style={{background: \"rgba(61,194,131,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"} }  ref={svgLegendRef}/>)\n\n}\n\n\nexport default RectangleChart;","export default __webpack_public_path__ + \"static/media/MonthlySales.e4907134.csv\";","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\nimport dataCsv from '../../data/MonthlySales.csv';\nimport dataJson from \"../../data/MonthlySalesbyCategory.json\";\n\nconst LineChart = () => {\n    const svgLegendRef = useRef(null);\n\n    let monthlySales = [];\n    let svg;\n    useEffect(() => {\n        const h = 200;\n        const w = 400;\n        const padding = 25;\n        let salesTotal = 0.0;\n        let salesAvg = 0.0;\n        let metrics = [];\n\n        monthlySales = dataJson.monthlySales\n\n        d3.csv(dataCsv).then(function (data, err) {\n            // monthlySales = data\n        }).then(() => {\n            buildLine();\n            showTotals();\n        }).catch(function (err) {\n            console.log(err);  //if so, log it to the console\n            throw err;\n        })\n\n\n\n        function buildLine() {\n\n            let xScale = d3.scaleLinear()\n                .domain([\n                    d3.min(monthlySales, function(d){ return d.month;}) ,\n                    d3.max(monthlySales, function(d){ return d.month;})\n                ])\n                .range([padding+5, w-padding]);\n\n\n\n            let yScale = d3.scaleLinear()\n                .domain([\n                        d3.min(monthlySales, function(d){ return d.sales;}) ,\n\n                    ])\n                .range([h-padding,10]);\n\n\n            // let xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n            // let yAxis = d3.svg.axis().scale(yScale).orient(\"left\");\n\n            let xAxis = d3.axisBottom(xScale)\n                .tickValues([1, 2, 3, 5, 8, 13, 21])\n\n            let yAxis = d3.axisLeft(yScale)\n                .tickValues([1, 2, 3, 5, 8, 13, 21])\n\n\n            let lineFun = d3\n                .line()\n                .x(function (d) { return ((d.month-20130001)/3.25); })\n                .y(function (d) { return h-d.sales; })\n                .curve(d3.curveLinear);\n\n             svg = d3.select(svgLegendRef.current)\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .call(xAxis)\n                .call(yAxis)\n                .attr(\"fill\", \"rgb(255,172,213)\")\n                .attr(\"rx\", 14);\n\n            svg.append(\"path\")\n                .attr(\"d\", lineFun(monthlySales))\n                .attr(\"stroke\", \"rgb(0,169,208)\")\n                .attr(\"stroke-width\", 4)\n                .attr(\"fill\", \"none\")\n\n\n            svg.selectAll(\"text\")\n                .data(monthlySales)\n                .enter()\n                .append(\"text\")\n                //.text(function(d){ return d.sales; } )\n                .text(function (d) {\n                    return parseFloat(d.sales);\n                })\n                .attr('x', function (d) {\n                    return (d.month-20130001)/3.25 - 25;\n                })\n                .attr('y', function (d) {\n                    return h-d.sales;\n                })\n                .attr(\"font-size\", \"13px\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"fill\", \"#ffffff\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dy\", \".35em\")\n                .attr(\"font-weight\", function (d, i) {\n                    if (i === 0 || i === (monthlySales.length - 1)) {\n                        return \"bold\";\n                    } else {\n                        return \"normal\";\n                    }\n                })\n        }\n        function showTotals(){\n\n            //sales total\n            for (let i = 0; i < monthlySales.length; i++) {\n                salesTotal += monthlySales[i]['sales']*1; //*1 to make it a number\n            };\n\n            //sales average\n            salesAvg = salesTotal / monthlySales.length;\n\n            //add metrics to array\n            metrics.push(\"Sales Total: \" + salesTotal);\n            metrics.push(\"Sales Avg: \"+salesAvg.toFixed(2));\n\n            const t = d3.select(svgLegendRef.current).append(\"table\");\n\n            //now add total\n            t.selectAll(\"tr\")\n                .data(metrics)\n                .enter()\n                .append(\"tr\")\n                .append(\"td\")\n                .text(function(d){ return d; })\n                .attr(\"font-size\", \"13px\")\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"style\" , \"background-color: #00000029; color:white\");\n\n        };\n\n\n\n    },[svg]);\n    return(<div style={{background: \"rgb(93,38,53)\", borderRadius: \"8px\"} } ref={svgLegendRef}/>)\n\n}\n\n\nexport default LineChart;","\nimport * as d3 from \"d3\";\nimport {useEffect, useRef} from 'react';\n\nconst Scatterplot = () => {\n    const svgLegendRef = useRef(null);\n    let svg;\n\n    useEffect(() => {\n        const h = 350;\n        const w = 400;\n\n        const monthlySales = [\n            {\"month\":10, \"sales\":100},\n            {\"month\":20, \"sales\":130},\n            {\"month\":30, \"sales\":250},\n            {\"month\":40, \"sales\":300},\n            {\"month\":50, \"sales\":265},\n            {\"month\":60, \"sales\":225},\n            {\"month\":70, \"sales\":180},\n            {\"month\":80, \"sales\":120},\n            {\"month\":90, \"sales\":145},\n            {\"month\":100, \"sales\":130}\n        ];\n\n        function salesKPI (d) {\n            if (d>=250) { return \"#33CC66\"; } else\n            if (d<250) { return \"#9b9b9b\"; }\n        }\n        //add min/max to array\n        Array.max = function( array ){\n            return Math.max.apply( Math, array );\n        };\n\n        Array.min = function( array ){\n            return Math.min.apply( Math, array );\n        };\n\n        function showMinMax(ds, col, val, type){\n            const max = d3.max(ds, function(d) { return d[col]; } );\n            const min = d3.min(ds, function (d) {\n                return d[col];\n            });\n\n            if (type==='minmax' && (val === max || val === min)) {\n                return val;\n            } else\n\n            if (type==='all') {\n                return val;\n            }\n\n        }\n\n         svg = d3.select(svgLegendRef.current)\n            .append(\"svg\")\n            .attr( \"width\",w)\n            .attr(\"height\", h)\n            .attr(\"fill\", \"rgba(199,255,234,0.9)\")\n            .attr(\"rx\", 14);\n\n        svg.selectAll(\"circle\")\n            .data(monthlySales)\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", function(d){ return d.month*3; })\n            .attr(   \"cy\", function(d){ return h-d.sales; })\n            .attr(\"r\",  7)\n            .attr(\"fill\", function(d){ return salesKPI(d.sales)})\n\n        svg.selectAll(\"text\")\n            .data(monthlySales)\n            .enter()\n            .append(\"text\")\n            .text(function(d){ return showMinMax(monthlySales, 'sales', d.sales, 'minmax'); })\n                .attr(\"x\", function(d){ return (d.month*3)-25; })\n    .attr( \"y\", function(d){ return h-d.sales; })\n    .attr( \"font-size\", \"13px\")\n    .attr( \"font-family\", \"sans-serif\")\n    .attr(  \"fill\", \"#fffefe\")\n    .attr(    \"text-anchor\", \"start\")\n    },[svg]);\n    return(<div style={{background: \"rgba(61,136,194,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"}} ref={svgLegendRef}/>)\n\n}\n\n\nexport default Scatterplot;","export default [\n    { title: 'Terminator', value: 21, year: 1984 },\n    { title: 'Commando', value: 81, year: 1985 },\n    { title: 'Predator', value: 25, year: 1987 },\n    { title: 'Raw Deal', value: 26, year: 1986 },\n    { title: 'The Running Man', value: 11, year: 1987 },\n    { title: 'Total Recall', value: 44, year: 1990 },\n    { title: 'Terminator 2', value: 0, year: 1991 },\n    { title: 'Last Action Hero', value: 22, year: 1993 },\n    { title: 'True Lies', value: 51, year: 1994 },\n    { title: 'Eraser', value: 29, year: 1996 },\n    { title: 'Terminator 3', value: 2, year: 2003 },\n]\n","import React, { Component } from 'react'\nimport * as d3Axis from 'd3-axis'\nimport { select as d3Select } from 'd3-selection'\n\nimport './Axis.css'\n\nexport default class Axis extends Component {\n    componentDidMount() {\n        this.renderAxis()\n    }\n\n    componentDidUpdate() {\n        this.renderAxis()\n    }\n\n    renderAxis() {\n        const axisType = `axis${this.props.orient}`\n        const axis = d3Axis[axisType]()\n            .scale(this.props.scale)\n            .tickSize(-this.props.tickSize)\n            .tickPadding([12])\n            .ticks([4])\n\n        d3Select(this.axisElement).call(axis)\n    }\n\n    render() {\n        return (\n            <g\n                className={`Axis Axis-${this.props.orient}`}\n                ref={(el) => { this.axisElement = el; }}\n                transform={this.props.translate}\n            />\n        )\n    }\n}\n","import React from 'react'\nimport Axis from '../Axis/Axis'\n\nexport default ({ scales, margins, svgDimensions }) => {\n    const { height, width } = svgDimensions\n\n    const xProps = {\n        orient: 'Bottom',\n        scale: scales.xScale,\n        translate: `translate(0, ${height - margins.bottom})`,\n        tickSize: height - margins.top - margins.bottom,\n    }\n\n    const yProps = {\n        orient: 'Left',\n        scale: scales.yScale,\n        translate: `translate(${margins.left}, 0)`,\n        tickSize: width - margins.left - margins.right,\n    }\n\n    return (\n        <g>\n            <Axis {...xProps} />\n            <Axis {...yProps} />\n        </g>\n    )\n}\n","import React, { Component } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { interpolateLab } from 'd3-interpolate'\n\nexport default class Bars extends Component {\n    constructor(props) {\n        super(props)\n\n        this.colorScale = scaleLinear()\n            .domain([0, this.props.maxValue])\n            .range(['#F3E5F5', '#7B1FA2'])\n            .interpolate(interpolateLab)\n    }\n\n    render() {\n        const { scales, margins, data, svgDimensions } = this.props\n        const { xScale, yScale } = scales\n        const { height } = svgDimensions\n\n        const bars = (\n            data.map(datum =>\n                <rect\n                    key={datum.title}\n                    x={xScale(datum.title)}\n                    y={yScale(datum.value)}\n                    height={height - margins.bottom - scales.yScale(datum.value)}\n                    width={xScale.bandwidth()}\n                    fill={this.colorScale(datum.value)}\n                />,\n            )\n        )\n\n        return (\n            <g>{bars}</g>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { scaleBand, scaleLinear } from 'd3-scale'\n\nimport data from '../data'\nimport Axes from '../Axes/Axes'\nimport Bars from '../Bars/Bars'\nimport ResponsiveWrapper from '../ResponsiveWrapper/ResponsiveWrapper'\n\nclass Chart extends Component {\n    constructor() {\n        super()\n        this.xScale = scaleBand()\n        this.yScale = scaleLinear()\n    }\n\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 }\n        const svgDimensions = {\n            width: Math.max(this.props.parentWidth, 300),\n            height: 500\n        }\n\n        const maxValue = Math.max(...data.map(d => d.value))\n\n        const xScale = this.xScale\n            .padding(0.5)\n            .domain(data.map(d => d.title))\n            .range([margins.left, svgDimensions.width - margins.right])\n\n        const yScale = this.yScale\n            .domain([0, maxValue])\n            .range([svgDimensions.height - margins.bottom, margins.top])\n\n        return (\n            <svg width={svgDimensions.width} height={svgDimensions.height}>\n                <Axes\n                    scales={{ xScale, yScale }}\n                    margins={margins}\n                    svgDimensions={svgDimensions}\n                />\n                <Bars\n                    scales={{ xScale, yScale }}\n                    margins={margins}\n                    data={data}\n                    maxValue={maxValue}\n                    svgDimensions={svgDimensions}\n                />\n            </svg>\n        )\n    }\n}\n\nexport default ResponsiveWrapper(Chart)\n","import React from \"react\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Brush,\n    AreaChart,\n    Area\n} from \"recharts\";\n\nconst data = [\n    {\n        name: \"Page A\",\n        uv: 4000,\n        pv: 2400,\n        amt: 2400\n    },\n    {\n        name: \"Page B\",\n        uv: 3000,\n        pv: 1398,\n        amt: 2210\n    },\n    {\n        name: \"Page C\",\n        uv: 2000,\n        pv: 9800,\n        amt: 2290\n    },\n    {\n        name: \"Page D\",\n        uv: 2780,\n        pv: 3908,\n        amt: 2000\n    },\n    {\n        name: \"Page E\",\n        uv: 1890,\n        pv: 4800,\n        amt: 2181\n    },\n    {\n        name: \"Page F\",\n        uv: 2390,\n        pv: 3800,\n        amt: 2500\n    },\n    {\n        name: \"Page G\",\n        uv: 3490,\n        pv: 4300,\n        amt: 2100\n    }\n];\n\nconst SynchronizedLineCharts = (props) => {\n        return (\n        <div style={{background: \"rgba(61,136,194,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"}}>\n            <h4>A demo of synchronized AreaCharts</h4>\n            <LineChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            </LineChart>\n            <p>Maybe some other content</p>\n            <LineChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                <Brush />\n            </LineChart>\n            <AreaChart\n                width={500}\n                height={200}\n                data={data}\n                syncId=\"anyId\"\n                margin={{\n                    top: 10,\n                    right: 30,\n                    left: 0,\n                    bottom: 0\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n            </AreaChart>\n        </div>\n    );\n}\n\nexport default SynchronizedLineCharts;","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            label: '# of Red Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: 'rgb(255, 99, 132)',\n        },\n        {\n            label: '# of Blue Votes',\n            data: [2, 3, 20, 5, 1, 4],\n            backgroundColor: 'rgb(54, 162, 235)',\n        },\n        {\n            label: '# of Green Votes',\n            data: [3, 10, 13, 15, 22, 30],\n            backgroundColor: 'rgb(75, 192, 192)',\n        },\n    ],\n};\n\nconst options = {\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst GroupedBar = () => (\n        <Bar style={{background: \"rgba(61,136,194,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"}} data={data} options={options} />\n);\n\nexport default GroupedBar;\n","import React from 'react';\nimport {\n    VictoryChart,\n    VictoryZoomContainer,\n    VictoryScatter,\n} from \"victory\";\n\n\nfunction random(max, min) {\n    return Math.random() * (max - min) + min;\n\n}\n\nfunction range(size) {\n    return [...Array(size).keys()].map(i => i );\n\n}\n\nclass BrushZoom extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        data: this.getScatterData()\n    }\n\n    getScatterData() {\n        return range(50).map((index) => {\n            return {\n                x: random(1, 50),\n                y: random(10, 90),\n                size: random(8) + 3\n            };\n        });\n    }\n\n    render() {\n        return (\n            <div                 style={{background: \"rgba(176,61,194,0.58)\", borderRadius: \"8px\" , padding: \"30px 0px\"}}\n            >\n            <VictoryChart\n                domain={{y: [0, 100]}}\n                containerComponent={<VictoryZoomContainer zoomDomain={{x: [5, 35], y: [0, 100]}}/>}\n            >\n                <VictoryScatter\n                    data={this.state.data}\n                    style={{\n                        data: {\n                            opacity: ({ datum }) =>  datum.y % 5 === 0 ? 1 : 0.7,\n                            fill: ({ datum }) => datum.y % 5 === 0 ? \"tomato\" : \"black\"\n                        }\n                    }}\n                />\n            </VictoryChart>\n            </div>\n        );\n    }\n}\n\nexport  default BrushZoom;","import React from 'react';\nimport { Group } from '@visx/group';\nimport letterFrequency, { LetterFrequency } from '@visx/mock-data/lib/mocks/letterFrequency';\nimport { scaleLinear } from '@visx/scale';\nimport { Point } from '@visx/point';\nimport { Line, LineRadial } from '@visx/shape';\n\nconst orange = '#ff9933';\nexport const pumpkin = '#f5810c';\nconst silver = '#d9d9d9';\nexport const background = '#FAF7E9';\n\nconst degrees = 360;\nconst data = letterFrequency.slice(2, 12);\n\nconst y = (d: LetterFrequency) => d.frequency;\n\nconst genAngles = (length: number) =>\n    [...new Array(length + 1)].map((_, i) => ({\n        angle: i * (degrees / length),\n    }));\n\nconst genPoints = (length: number, radius: number) => {\n    const step = (Math.PI * 2) / length;\n    return [...new Array(length)].map((_, i) => ({\n        x: radius * Math.sin(i * step),\n        y: radius * Math.cos(i * step),\n    }));\n};\n\nfunction genPolygonPoints<Datum>(\n    dataArray: Datum[],\n    scale: (n: number) => number,\n    getValue: (d: Datum) => number,\n) {\n    const step = (Math.PI * 2) / dataArray.length;\n    const points: { x: number; y: number }[] = new Array(dataArray.length).fill({ x: 0, y: 0 });\n    const pointString: string = new Array(dataArray.length + 1).fill('').reduce((res, _, i) => {\n        if (i > dataArray.length) return res;\n        const xVal = scale(getValue(dataArray[i - 1])) * Math.sin(i * step);\n        const yVal = scale(getValue(dataArray[i - 1])) * Math.cos(i * step);\n        points[i - 1] = { x: xVal, y: yVal };\n        res += `${xVal},${yVal} `;\n        return res;\n    });\n\n    return { points, pointString };\n}\n\nconst defaultMargin = { top: 40, left: 80, right: 80, bottom: 80 };\n\nexport type RadarProps = {\n    width: number;\n    height: number;\n    margin?: { top: number; right: number; bottom: number; left: number };\n    levels?: number;\n};\n\nexport default function Example({ width, height, levels = 5, margin = defaultMargin }: RadarProps) {\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    const radius = Math.min(xMax, yMax) / 2;\n\n    const radialScale = scaleLinear<number>({\n        range: [0, Math.PI * 2],\n        domain: [degrees, 0],\n    });\n\n    const yScale = scaleLinear<number>({\n        range: [0, radius],\n        domain: [0, Math.max(...data.map(y))],\n    });\n\n    const webs = genAngles(data.length);\n    const points = genPoints(data.length, radius);\n    const polygonPoints = genPolygonPoints(data, d => yScale(d) ?? 0, y);\n    const zeroPoint = new Point({ x: 0, y: 0 });\n\n    return width < 10 ? null : (\n        <svg width={width} height={height}>\n            <rect fill={background} width={width} height={height} rx={14} />\n            <Group top={height / 2 - margin.top} left={width / 2}>\n                {[...new Array(levels)].map((_, i) => (\n                    <LineRadial\n                        key={`web-${i}`}\n                        data={webs}\n                        angle={d => radialScale(d.angle) ?? 0}\n                        radius={((i + 1) * radius) / levels}\n                        fill=\"none\"\n                        stroke={silver}\n                        strokeWidth={2}\n                        strokeOpacity={0.8}\n                        strokeLinecap=\"round\"\n                    />\n                ))}\n                {[...new Array(data.length)].map((_, i) => (\n                    <Line key={`radar-line-${i}`} from={zeroPoint} to={points[i]} stroke={silver} />\n                ))}\n                <polygon\n                    points={polygonPoints.pointString}\n                    fill={orange}\n                    fillOpacity={0.3}\n                    stroke={orange}\n                    strokeWidth={1}\n                />\n                {polygonPoints.points.map((point, i) => (\n                    <circle key={`radar-point-${i}`} cx={point.x} cy={point.y} r={4} fill={pumpkin} />\n                ))}\n            </Group>\n        </svg>\n    );\n}\n","import React from \"react\";\nimport BaseLayout from \"../components/layouts/BaseLayout\";\nimport RectangleChart from \"../components/shared/RectangleChart\";\nimport LineChart from \"../components/shared/LineChart\";\nimport Scatterplot from \"../components/shared/Scatterplot\";\nimport Chart from \"../components/charts/LineChart/Chart/Chart\";\nimport SynchronizedLineCharts from \"../components/SynchronizedLineCharts/SynchronizedLineCharts\";\nimport GroupedBar from \"../components/charts/GroupedBar/GroupedBar\";\nimport BrushZoom from \"../components/charts/BrushZoom/BrushZoom\";\nimport ParentSize from '@visx/responsive/lib/components/ParentSize';\nimport Typed from 'react-typed';\nimport Flash from 'react-reveal/Flash';\n\nimport Example from '../components/charts/Pies/Pies';\nimport {Col, Container, Row} from \"reactstrap\";\nimport Fade from \"react-reveal/Fade\";\n\nclass Home extends React.Component {\n\n    constructor() {\n        super();\n        this.roles = ['Data','visualization', 'AI'];\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <BaseLayout className=\"cover\">\n                <div className=\"main-section\">\n                    <div className=\"background-image\">\n                        {/*<img src=\"/images/background-index.png\"/>*/}\n                    </div>\n                    <Container>\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"hero-section\">\n                                    <div className={`flipper`}>\n                                        <div className=\"back\">\n                                            <div className=\"hero-section-content\">\n                                                    <Fade left>\n                                                        <h2> Data visualization </h2>\n                                                    </Fade>\n                                                <Fade bottom>\n                                                <div className=\"hero-section-content-intro\">\n                                                    Have a look at my project and enjoin.\n                                                </div>\n                                                    </Fade>\n                                            </div>\n                                            <div className=\"shadow-custom\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col md=\"6\" className=\"hero-welcome-wrapper\">\n                                <Fade bottom>\n                                <div className=\"hero-welcome-text\">\n                                    <h1>\n                                        Welcome to the  website What Is Data Visualization? Definition, Examples...\n                                    </h1>\n                                </div>\n                                </Fade>\n                                <Typed\n                                    loop\n                                    typeSpeed={70}\n                                    backSpeed={70}\n                                    strings={this.roles}\n                                    fadeOutDelay={1000}\n                                    loopCount={0}\n                                    showCursor\n                                    className=\"self-typed\"\n                                    cursorChar=\"|\"\n                                />\n                                <div className=\"hero-welcome-bio\">\n                                    <h1>\n                                        Let's take a look on my work.\n                                    </h1>\n                                </div>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                <RectangleChart/>\n                                </Flash>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                    <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                        </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                                <LineChart/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                                <Scatterplot/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                                <Chart/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\" className=\"hero-welcome-wrapper  py-3\">\n\n                                <SynchronizedLineCharts/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                                <GroupedBar/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                            <BrushZoom/>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrapper  py-3\">\n\n                                <div style={{height: \"400px\"}}>\n                                    <ParentSize>{({width, height}) => <Example width={width}\n                                                                               height={height}/>}</ParentSize>,\n\n                                </div>\n                            </Col>\n                            <Col md=\"6\" xs=\"12\"  lg=\"6\"  className=\"hero-welcome-wrappe py-3\">\n                                <Flash>\n                                    <div className=\"title-chart\">\n\n                                        <h4>As you can see, one potential problem with a strip plot is that you could have very dense grouping of data points, leading to data points being plotted over top of one another on the chart and obscuring the data.</h4>\n                                    </div>\n\n                                </Flash>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </div>\n            </BaseLayout>\n\n        )\n    }\n\n\n}\n\nexport default Home;"],"sourceRoot":""}